#
# Proftpd sample configuration for FTPS connections.
#
# Note that FTPS impose some limitations in NAT traversing.
# See http://www.castaglia.org/proftpd/doc/contrib/ProFTPD-mini-HOWTO-TLS.html
# for more information.
#

<IfModule mod_tls.c>
TLSEngine                               on
TLSRequired                             on

TLSLog                                  /var/log/proftpd/tls.log
TLSDHParamFile				/etc/proftpd/dhparams.pem

#The allowed protocols are: 
#SSLv3		Allow only SSLv3
#TLSv1		Allow only TLSv1
#TLSv1.1	Allow only TLSv1.1
#TLSv1.2	Allow only TLSv1.2
#TLSv1.3	Allow only TLSv1.3 Need high then 1.3.6
#To support both SSLv3 and TLSv1, simply list both parameters for the TLSProtocol directive, e.g.:
#  TLSProtocol SSLv3 TLSv1
TLSProtocol                   TLSv1.2
TLSCipherSuite                ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384

TLSServerCipherPreference     off
#TLSessionTickets              off  # Need high then 1.3.6

#
# Server SSL certificate. You can generate a self-signed certificate using 
# a command like:
#
# openssl req -x509 -newkey rsa:1024 \
#          -keyout /etc/ssl/private/proftpd.key -out /etc/ssl/certs/proftpd.crt \
#          -nodes -days 365
#
# The proftpd.key file must be readable by root only. The other file can be
# readable by anyone.
#
# chmod 0600 /etc/ssl/private/proftpd.key 
# chmod 0640 /etc/ssl/private/proftpd.key
# 
TLSRSACertificateFile                   /etc/ssl/certs/ssl-cert-snakeoil.pem
TLSRSACertificateKeyFile                /etc/ssl/private/ssl-cert-snakeoil.key

#
# CA the server trusts...
#TLSCACertificateFile			 /etc/ssl/certs/CA.pem

# ...or avoid CA cert and be verbose
#TLSOptions                      NoCertRequest EnableDiags 
# ... or the same with relaxed session use for some clients (e.g. FireFtp)
#TLSOptions                      NoCertRequest EnableDiags NoSessionReuseRequired

#
#
# Per default drop connection if client tries to start a renegotiate
# This is a fix for CVE-2009-3555 but could break some clients.
#
#TLSOptions				AllowClientRenegotiations
#
# Authenticate clients that want to use FTP over TLS?
#
#TLSVerifyClient                         off
#

# Allow SSL/TLS renegotiations when the client requests them, but
# do not force the renegotations.  Some clients do not support
# SSL/TLS renegotiations; when mod_tls forces a renegotiation, these
# clients will close the data connection, or there will be a timeout
# on an idle data connection.
#
#TLSRenegotiate                          required off

# requires mod_tls_shmcache
<IfModule mod_tls_shmcache.c>
  TLSStapling                   on
  TLSStaplingCache              "shmcb:logs/ssl_stapling(32768)"
</IfModule>

</IfModule>

